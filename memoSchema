Schéma XML : 

- restriction : "base" peut prendre type xs:.... ou nom d'un simpleType
- minInclusive/Exclusive pour borne
- union des valeurs
- complexType ???

- xs:sequence permet de spécifier un contenu ordonné et éventuellement répété.
- xs:choice permet d'exprimer un contenu alternatif et éventuellement répété.
- xs:all permet d'indiquer une suite d'éléments sans préciser l'ordre d'apparition.
- xs:group permet de regrouper un contenu complexe.
- Contenu libre (xs:any)

- extension de type ??
- absence de valeur -> nil AHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH présence ou pas de résumé 

- Clef et référence

- Vous pouvez ensuite préciser le type de chaque éléments pour valider le document XML de manière de plus en plus fine. Définissez un type simple nommé pour chaque élément. Utilisez à chaque fois le type le plus resserré.
- Extension et restriction
- clefs et références

-faire lien partout ? intervenant dans ue vers sa fiche
-faire une page index.html --- accueil point d'entrée
-commande makeFile xsd -> prob avec entites param

XPATH 2.0
-La comparaison renvoie vraie si il existe un couple qui valide la condition dans LA LISTE (comme XPATH 1.0).
- java -cp saxon9he.jar net.sf.saxon.Query testXQuery.xql
- interv/@id --> ue/refintervenant/@ref --> ue/../bloc/semestre/@id --> parcours/ref-semestre/@ref-J

- JE SUIS UN MUTANT DISTINCT VALUES DANS XQUERY OKLM

SCHEEEE
-Un élément simple est un élément qui ne contient qu'une valeur dont le type est dit simple. Il ne contient pas d'autres éléments.
-Un élément simple peut donc être une balise qui ne contient aucun attribut et dans laquelle aucune autre balise n'est imbriquée. Un attribut d'une balise peut également être considéré comme un élément simple

- ue/@id "id de l'ue" parcours/ref-semestre/@ref semestre/bloc/ref-ue/@ref

-on récupère l'id de l'ue
-on récupère tous les id des semestres où il y'a l'id de l'UE
-on récupère tous les parcours ayant l'id des semestres sélectionnés

COMPLETER XML !!!!!
